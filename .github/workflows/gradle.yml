name: Spring Boot with Gradle CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    name: naegahama_build

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: gradle
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew clean build
      
       # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

      # Jar file Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
      
      # appspec.yml Copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy/

   # script file Copy
    - name: Copy shell
      run: cp ./scripts/* ./deploy/
      
      # 압축파일 형태로 전달(codedeploy는 zip형식만 읽을 수 있음)
    - name: Make zip file
      run: zip -r -qq -j ./naegahama-build.zip ./deploy
      
 
      
      # AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{SECRETS.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{SECRETS.AWS_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-2
        
      # S3로 업로드
    - name: Upload to AWS S3
      run: aws s3 cp --region ap-northeast-2 --acl private ./naegahama-build.zip s3://minkicicdbucket/hippo/hippo-build.zip

# Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name springboot-intro \
        --deployment-group-name springboot-intro-deploy-group \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=minkicicdbucket,bundleType=zip,key=hippo/hippo-build.zip \
        --region ap-northeast-2
