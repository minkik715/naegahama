# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew




     # Build
    - name: Build with Gradle
      run: ./gradlew clean build

      # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

        # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

        # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./springboot-intro-build.zip ./deploy

        # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
       AWS_ACCESS_KEY_ID: AKIAWXS7W34BUF4NQRF6
       AWS_SECRET_ACCESS_KEY: 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
      run:
            aws s3 cp \
            --region ap-northeast-2 \
            --acl private \
    ./springboot-intro-build.zip s3://springboot-intro-build


#         distribution: 'temurin'
#     - name: Build with Gradle
#       uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
#       with:
#         arguments: build
